trigger: none

variables:
  - template: 'variables/bff.yml'

resources:
  repositories:
    - repository: templates
      type: git
      name: User Interface Center of Excellence/templates
      ref: refs/heads/master
  containers:
    - container: cicd_devtools
      image: axglbhubacr.azurecr.io/cicd-devtools:latest
      endpoint: DefaultDockerRegistry
      options: '--user root'
  pipelines:
    - pipeline: ui-coe-ci-tagged
      source: ui-coe-ci-tagged
      project: User Interface Center of Excellence
      trigger:
        branches:
          - master
        tags:
          - tenant-api

pool:
  name: linux-vmss-agent-pool

stages:
  - template: '../../../tools/pipelines/templates/deploy-bff.yml'
    parameters:
      environment: dv
      varPath: tenant/pipelines/variables
      gate: dv-tenant
      serviceConnection: $(nonProdServiceConnection)
      stageCondition: "and(succeeded(), and(ne(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.Reason'], 'Manual')))"
      dependsOn: ''
      appPath: $(appPath)
      appTag: $(appTag)
      containerRegistry: $(containerRegistry)
      registryRepoName: $(registryRepoName)
      imageName: $(imageName)
      functionAppEnabled: false

  - template: '../../../tools/pipelines/templates/deploy-bff.yml'
    parameters:
      environment: ci
      varPath: tenant/pipelines/variables
      gate: ci-tenant
      serviceConnection: $(nonProdServiceConnection)
      stageCondition: "eq(variables['Build.SourceBranch'], 'refs/heads/master')"
      dependsOn: ''
      appPath: $(appPath)
      appTag: $(appTag)
      containerRegistry: $(containerRegistry)
      registryRepoName: $(registryRepoName)
      imageName: $(imageName)
      functionAppEnabled: false

  - template: '../../../tools/pipelines/templates/deploy-bff.yml'
    parameters:
      environment: qa
      varPath: tenant/pipelines/variables
      gate: qa-tenant
      serviceConnection: $(nonProdServiceConnection)
      stageCondition: "and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))"
      dependsOn: 'ci'
      appPath: $(appPath)
      appTag: $(appTag)
      containerRegistry: $(containerRegistry)
      registryRepoName: $(registryRepoName)
      imageName: $(imageName)
      functionAppEnabled: false

  - template: '../../../tools/pipelines/templates/deploy-bff.yml'
    parameters:
      environment: st
      varPath: tenant/pipelines/variables
      gate: st-tenant
      serviceConnection: $(prodServiceConnection)
      stageCondition: "and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))"
      dependsOn: 'qa'
      appPath: $(appPath)
      appTag: $(appTag)
      containerRegistry: $(containerRegistry)
      registryRepoName: $(registryRepoName)
      imageName: $(imageName)
      functionAppEnabled: false

  - template: '../../../tools/pipelines/templates/deploy-bff.yml'
    parameters:
      environment: pr
      varPath: tenant/pipelines/variables
      gate: pr-tenant
      serviceConnection: $(prodServiceConnection)
      stageCondition: "and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))"
      dependsOn: 'st'
      appPath: $(appPath)
      appTag: $(appTag)
      containerRegistry: $(containerRegistry)
      registryRepoName: $(registryRepoName)
      imageName: $(imageName)
      functionAppEnabled: false

  - template: '../../../tools/pipelines/templates/fortify-scan.yml'
    parameters:
      appTag: $(appTag)
      dependsOn: 'qa'
      applicationRoot: '/apps/$(appPath)/src'
      fortifyApplicationName: 'User Interface Center of Excellence'
      microserviceName: 'ui-coe'

  - template: monorepo/pact.yml@templates
    parameters:
      dependsOn: 'qa'
      appTag: $(appTag)
      continueOnError: true
