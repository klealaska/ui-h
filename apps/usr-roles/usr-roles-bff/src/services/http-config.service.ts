/**
 * @file This file was generated by ax-app generator.
 * @copyright AvidXchange Inc.
 */
import { Inject, Injectable } from '@nestjs/common';
import { httpConfig } from '../app/models/';
import { MOCK_ENV } from '../app/shared';

/**
 * HttpConfigService
 * @description A service that will contain httpConfig objects
 * that hold the remote and local URL's to the appropriate resource
 * the `path` property contains the remote URL
 * the `localPath` property contains the relative path, extending the provided 'MOCK_FILE_PATH',
 * to the local mock json file.
 * 'MOCK_ENV' needs to be provided representing a boolean that indicates if the app is run in mock or not
 */
@Injectable()
export class HttpConfigService {
  constructor(@Inject(MOCK_ENV) private mockEnv: boolean) {}

  // TODO: add baseUrl when we have that

  private getPath(config: httpConfig): string {
    // return config[this.mockEnv ? 'localPath' : 'path'];
    return config['localPath'];
  }

  public getUsers(): string {
    const config: httpConfig = {
      path: '',
      localPath: '/get-user-roles.json',
    };

    return this.getPath(config);
  }

  public updateCustomRole(roleId: string): string {
    const config: httpConfig = {
      // TODO: update path when we hook up to platform
      path: `IAM/roles/${roleId}`,
      localPath: '/update-custom-role.json',
    };

    return this.getPath(config);
  }
}
