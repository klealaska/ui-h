/**
 * @file This file was generated by ax-app generator.
 * @copyright AvidXchange Inc.
 */

import { MiddlewareConsumer, Module, NestModule, RequestMethod } from '@nestjs/common';
import { ConfigModule } from '@nestjs/config';
import { environment } from '../environments/environment';
import { HttpConfigService } from '../services/http-config.service';
import { AppController } from './app.controller';
import { AppService } from './app.service';
import { MOCK_ENV } from './shared';
import { BusHierBffHttpModule } from './bus-hier-bff-http/bus-hier-bff-http.module';
import {
  BusHierController,
  BusinessLevelController,
  BusHierCountService,
  BusHierService,
  ErpController,
  ErpService,
  OrganizationController,
  OrganizationService,
  EntityController,
  EntityService,
  BusinessLevelService,
} from './controllers';
import { AppMiddleware } from './middleware';

@Module({
  imports: [ConfigModule.forRoot(), BusHierBffHttpModule.register(environment.mock)],
  controllers: [
    AppController,
    OrganizationController,
    ErpController,
    EntityController,
    BusHierController,
    BusinessLevelController,
  ],
  providers: [
    AppService,
    OrganizationService,
    ErpService,
    BusinessLevelService,
    EntityService,
    BusHierService,
    HttpConfigService,
    BusHierCountService,
    {
      provide: MOCK_ENV,
      useValue: environment.mock,
    },
  ],
})
export class AppModule implements NestModule {
  configure(consumer: MiddlewareConsumer) {
    consumer
      .apply(AppMiddleware)
      .exclude({ path: 'api/health', method: RequestMethod.GET })
      .forRoutes({ path: '*', method: RequestMethod.ALL });
  }
}
